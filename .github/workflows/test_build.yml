# Name of the workflow
name:
  Test build

  # Controls what will trigger the workflow.
  # Change it to your needs.
on:
  # A new push to the "main" branch.
  pull_request:
    branches: ["main"]

# A single workflow can have multiple jobs.
jobs:
  # 'A new job is defined with the name: "build_android"
  test_build_android:
    # Defines what operating system will be used for the actions.
    # For android, we will use Linux GitHub-Hosted Runner.
    runs-on: ubuntu-22.04
    # Defines what step should be passed for successful run
    steps:
      # Checkout to the selected branch
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore gradle.properties
        env:
          GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
        shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: "temurin"
      # Download and install flutter packages
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          # Define which stable flutter version should be used
          flutter-version: "3.24.4"
          channel: "stable"
          # Enables cache for flutter packages
          # Speed up the process
          cache: true
      # Get Flutter project dependencies
      - name: Get dependencies
        run: flutter pub get

      - name: Run flutter doctor
        run: flutter doctor
      - name: Get Run flutter clean
        run: flutter clean

      - name: Build apks
        run: flutter build apkâ€Š--split-per-abi

      - name: Build release app bundle
        run: flutter build appbundle --dart-define ACCESS_TOKEN=${{ secrets.MAPBOX_SECRET_KEY }} --no-shrink

      - name: Sign App Bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
